
<script src="~/lib/blockly/blockly_compressed.js"></script>
<script src="~/lib/blockly/blocks_compressed.js"></script>
<script src="~/lib/blockly/msg/js/en.js"></script>
<script src="~/CustomBlocklyJS/AppendCustomBlocks.js"></script>

<div id="blocklyDiv" style="height: 600px; width: 100%;"></div>
<xml xmlns="https://developers.google.com/blockly/xml" id="toolbox" style="display: none">
    <category name="Contract" colour="0">
        <block type="contract">
            <field name="NAME">[insert contract name]</field>
        </block>
    </category>
    <category name="Contract elements" colour="230">
        <block type="contract_property">
            <field name="Visibility">1</field>
        </block>
        <block type="contract_event"></block>
        <block type="contract_constructor">
            <field name="Visibility">1</field>
        </block>
        <block type="contract_function">
            <field name="Visibility">1</field>
            <mutation apply_modifier="false"></mutation>
        </block>
        <block type="modifier"></block>
        <block type="fallback_function"></block>
        <block type="receive_function"></block>
    </category>
    <category name="Function elements" colour="120">
        <block type="assignment"></block>
        <block type="requirement"></block>
        <block type="contract_loop"></block>
        <block type="if_statement"></block>
        <block type="return"></block>
        <block type="break_statement"></block>
    </category>
    <category name="Built-in functions" colour="150">
        <block type="balance_call"></block>
        <block type="transfer_call"></block>
    </category>
    <category name="Variables" colour="60">
        <block type="variable"></block>
        <block type="variable_declaration"></block>
    </category>
    <category name="Calculation" colour="60">
        <block type="constant_value">
            <field name="value">[value]</field>
        </block>
        <block type="special_value_call"></block>
        <block type="operation">
            <field name="Operator">0</field>
        </block>
    </category>
    <category name="Logic" colour="315">
        <block type="condition"></block>
        <block type="logic_operation">
            <field name="Operator">6</field>
        </block>
        <block type="true_const"></block>
        <block type="false_const"></block>
    </category>
    <category name="Functions calls" colour="120" custom="MY_PROCEDURE"></category>
    <category name="Events calls" colour="120" custom="MY_EVENTS"></category>
    <category name="Modifiers calls" colour="30" custom="MY_MODIFIERS"></category>
</xml>
<span style="font-size:30px;cursor:pointer;margin-right:20px" onclick="openNav()">&#9776; Examples</span>
<span id="GenerateCodeButton" style="font-size:30px;cursor:pointer">Generate code</span>

<script>
    var demoWorkspace = Blockly.inject('blocklyDiv',
        {
            toolbox: document.getElementById('toolbox'),
            scrollbars: true
        });

    demoWorkspace.registerToolboxCategoryCallback(
        'MY_PROCEDURE', myFunctionCategoryCallback);
    demoWorkspace.registerToolboxCategoryCallback(
        'MY_EVENTS', myEventsCategoryCallback);
    demoWorkspace.registerToolboxCategoryCallback(
        'MY_MODIFIERS', myModifiersCategoryCallback);

    $(document).ready(function () {
        $("#GenerateCodeButton").click(function (e) {
            e.preventDefault();
            var blocks = Blockly.Xml.workspaceToDom(demoWorkspace);
            var blocksXmlCode = new XMLSerializer().serializeToString(blocks);
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetCode", "Blockly")",
                data: {
                    code: blocksXmlCode
                },
                success: function (result) {
                    console.log(result);
                    $("#solidityCodeText").text(result);
                    $("#solidityCodePopup").dialog({
                        width: screen.width * 0.8,
                        modal: true,
                        resizable: true,
                        dialogClass: 'code-popup'
                    });
                },
                error: function (result) {
                    alert('Error during connection: ' + result);
                }
            });
        });
    });

    function openNav() {
        document.getElementById("mySidenav").style.width = "250px";
    }

    function closeNav() {
        document.getElementById("mySidenav").style.width = "0";
    }

    function showExample(name) {
        Blockly.setExampleOnWorkspace(name, demoWorkspace);
        closeNav();
    }
</script>

<div id="mySidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    <a href="javascript:void(0)" onclick="showExample('counter')">Counter</a>
    <a href="javascript:void(0)" onclick="showExample('changeNotifier')">Change notifier</a>
    <a href="javascript:void(0)" onclick="showExample('piggybank')">Piggybank</a>
    <a href="javascript:void(0)" onclick="showExample('factorial')">Factorial</a>
    <a href="javascript:void(0)" onclick="showExample('simlpeAuction')">Simple auction</a>
</div>

<div id="solidityCodePopup" title="Your code" class="solidity-code-div">
    <pre><code id="solidityCodeText"></code></pre>
</div>